# This build locally using docker-compose up --build
version: "3.8"

services:
  blog-db:
    build: ./database/mongo
    container_name: blog-db
    env_file: .env
    ports:
      - "${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - ./database/mongo/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    env_file: .env
    restart: always
    depends_on:
      - blog-db
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: blog-db
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_BASICAUTH_PASSWORD}
      ME_CONFIG_SITE_COOKIESECRET: "randomsecretkey"
      ME_CONFIG_SITE_SESSIONSECRET: "anotherrandomkey"

  blog-backend:
    build:
      context: ./backend
    container_name: blog-backend
    env_file: .env
    ports:
      - "${BACKEND_PORT}:3000"
    environment:
      MONGO_URI: ${MONGO_URI}
    depends_on:
      blog-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  blog-frontend:
    build:
      context: ./frontend/client
      args:
        REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
    container_name: blog-frontend
    env_file: .env
    ports:
      - "${FRONTEND_PORT}:3001"
    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
    depends_on:
      blog-backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongo-data:





# pulling image from dockerhub
# version: '3.8'

# services:
#   blog-db:
#     image: neyo55/blog-db:latest
#     container_name: blog-db
#     ports:
#       - "27017:27017"
#     volumes:
#       - blog-db-data:/data/db
#     networks:
#       - blog-net

#   blog-backend:
#     image: neyo55/blog-backend:latest
#     container_name: blog-backend
#     ports:
#       - "3000:3000"
#     depends_on:
#       - blog-db
#     environment:
#       - MONGO_URI=mongodb://blog-db:27017/blog-db
#     networks:
#       - blog-net

#   blog-frontend:
#     image: neyo55/blog-frontend:latest
#     container_name: blog-frontend
#     ports:
#       - "3001:3001"
#     depends_on:
#       - blog-backend
#     networks:
#       - blog-net

#   mongo-express:
#     image: mongo-express
#     container_name: mongo-express
#     restart: always
#     ports:
#       - "8081:8081"
#     environment:
#       - ME_CONFIG_MONGODB_SERVER=blog-db
#     networks:
#       - blog-net

# volumes:
#   blog-db-data:

# networks:
#   blog-net:
#     driver: bridge








